package kt.idss.ktws.gcrm;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.xml.namespace.QName;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * This class was generated by Apache CXF 2.7.5
 * 2015-01-20T23:40:10.743+09:00
 * Generated source version: 2.7.5
 *
 */
public final class GcrmClient {

    private static final Logger logger = LoggerFactory.getLogger(GcrmClient.class);
    private static final QName SERVICE_NAME = new QName("http://www.kt.com/bit/bss/InquireCustInfo", "KT_spcEAI_spcOC0745_spcInqure_spcCust_spcInfo_spcWS");

    public GcrmClient() {
    }

    public String gcrmSoapCall(String cust_id, String cust_type) {

        URL wsdlURL = KTSpcEAISpcOC0745SpcInqureSpcCustSpcInfoSpcWS.WSDL_LOCATION;
/*        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }*/

        try {
            /** gcrm 연동 URL
            * 개발: http://10.217.213.94:5001/KT_BIT_EAI_CRM_OM_01/queryForCustInfo0745
            * 운용: http://10.220.212.170:5001/KT_BIT_EAI_CRM_OM_01/PS_IDA_CRC_RetBizNoCstInfo
            */
            wsdlURL = new URL("file:///user/webims/idmsd/ktws/src/kt/idss/ktws/gcrm/wsdl/WSDL_RetBizNoCstInfo.wsdl"); //TODO 운용/SIT
//            wsdlURL = new URL("file:///user/develop/idmsd/ktws/src/kt/idss/ktws/gcrm/wsdl/WSDL_RetBizNoCstInfo.wsdl"); //TODO 개발
//            wsdlURL = new URL("http://10.217.213.94:5001/KT_BIT_EAI_CRM_OM_01/queryForCustInfo0745");

        } catch (Exception e) {
            e.printStackTrace();
        }

        KTSpcEAISpcOC0745SpcInqureSpcCustSpcInfoSpcWS ss = new KTSpcEAISpcOC0745SpcInqureSpcCustSpcInfoSpcWS(wsdlURL, SERVICE_NAME);
        KTSpcEAISpcOC0745SpcInboundSpcTriggerSpcWF port = ss.getKTSpcEAISpcOC0745SpcInboundSpcTriggerSpcWF();

        SimpleDateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
        Date currentDate = new Date();
        String date      = format.format(currentDate);
        String unique_id = date.substring(date.length()-6,date.length());

        BITHeader bitHeader = new BITHeader();
        bitHeader.setInterfaceID("LIDA_GCRC_DSB0001");
        bitHeader.setSourceSys("LIDA");        //IDMS
        bitHeader.setTargetSys("GCRC");        //IDMS
        bitHeader.setGUID("LIDA_"+date+"_WEB"+unique_id);
        bitHeader.setSeqNumber(0);

        javax.xml.ws.Holder<kt.idss.ktws.gcrm.BITHeader> _runProcessOC0745_bitHeader = new javax.xml.ws.Holder<kt.idss.ktws.gcrm.BITHeader>();
        _runProcessOC0745_bitHeader.value = bitHeader;

        KtInfOC0745 ktInfo = new KtInfOC0745();
        ktInfo.setCUSTID  (cust_id);
        ktInfo.setCUSTTYPE(cust_type);

        ListOfKtInfOC0745 listOfKtInfo = new ListOfKtInfOC0745();
        listOfKtInfo.setKtInfOC0745(ktInfo);

        RunProcessOC0745Input runProcessInput = new RunProcessOC0745Input();
        runProcessInput.setListOfKtInfOC0745(listOfKtInfo);

        String ipin_ci = "";
        try {
            kt.idss.ktws.gcrm.RunProcessOC0745Output outputForm = port.runProcessOC0745(_runProcessOC0745_bitHeader, runProcessInput);
//            JaxWsProxyFactoryBean proxyFactory = new JaxWsProxyFactoryBean();
//            proxyFactory.setServiceClass(KTSpcEAISpcOC0745SpcInboundSpcTriggerSpcWF.class);
//            proxyFactory.setAddress("http://10.217.213.94:5001/KT_BIT_EAI_CRM_OM_01/queryForCustInfo0745");
//            KTSpcEAISpcOC0745SpcInboundSpcTriggerSpcWF client = proxyFactory.create(KTSpcEAISpcOC0745SpcInboundSpcTriggerSpcWF.class);
//
//            kt.idss.ktws.gcrm.RunProcessOC0745Output outputForm = client.runProcessOC0745(_runProcessOC0745_bitHeader, runProcessInput);

            if (outputForm != null) {
                if (outputForm.getListOfKtInfOC0745Response() != null) {
                    if (outputForm.getListOfKtInfOC0745Response().getKtInfOC0745Response() != null) {

                        KtInfOC0745Response response = outputForm.getListOfKtInfOC0745Response().getKtInfOC0745Response();

                        /*  response.getRESULTCD
                            1 : CRM Soap조회 오류
                            2 : CRM 고객정보 없음
                            3 : CRM 조회한 고객 타입이 개인/개인사업자 외 일 경우
                        */
                        logger.debug("RESULT_CD            : [{}]", response.getRESULTCD            ());
                        logger.debug("CUST_TYPE            : [{}]", response.getCUSTTYPE            ());
                        logger.debug("g_CUST_ID            : [{}]", response.getGCUSTID            ());
                        logger.debug("ICIS_CUST_ID         : [{}]", response.getICISCUSTID         ());
                        logger.debug("NSTEP_CUST_ID        : [{}]", response.getNSTEPCUSTID        ());
                        logger.debug("CUST_NAME            : [{}]", response.getCUSTNAME            ());
                        logger.debug("CUST_NUM_TYPE        : [{}]", response.getCUSTNUMTYPE        ());
                        logger.debug("CUST_CLASS_NO        : [{}]", response.getCUSTCLASSNO        ());
                        logger.debug("CUST_NUM             : [{}]", response.getCUSTNUM             ());
                        logger.debug("CUST_IDFY_NAME       : [{}]", response.getCUSTIDFYNAME       ());
                        logger.debug("CUST_IDFY_NO_TYPE    : [{}]", response.getCUSTIDFYNOTYPE    ());
                        logger.debug("CUST_IDFY_NO         : [{}]", response.getCUSTIDFYNO         ());
                        logger.debug("REAL_NAME_CHECK_YN   : [{}]", response.getREALNAMECHECKYN   ());
                        logger.debug("REAL_NAME_CHECK_DATE : [{}]", response.getREALNAMECHECKDATE ());
                        logger.debug("IPIN_CI              : [{}]", response.getIPINCI              ());
                        logger.debug("IPIN_DI              : [{}]", response.getIPINDI              ());

                        if (StringUtils.equals("0", response.getRESULTCD ())) {
                            ipin_ci = response.getIPINCI              ();
                        }
                    }
                }
            } else {
                logger.debug("RunProcessOC0745Output is null...");
            }

        } catch (SiebelFault e) {
            logger.debug("runProcessOC0745 is SiebelFault...");
        }

        return ipin_ci;
    }
}

